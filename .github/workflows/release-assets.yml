name: Release extension
on:
  release:
    types: [published]

# builds the relevant .xpi and .crx files, gets them signed and adds them to the given release
# see https://cardinalby.github.io/blog/post/github-actions/webext/4-build-release-assets/
jobs:
  # first make sure we have a valid .zip on the release
  ensure-zip:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      zipAssetId: |
        ${{ steps.getZipAssetId.outputs.result || steps.uploadZipAsset.outputs.id }}
    steps:
      - uses: actions/checkout@v4
      - name: Check for existing .zip
        id: getZipAssetId
        uses: cardinalby/js-eval-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ASSETS_URL: ${{ github.event.release.assets_url }}
          ASSET_NAME: extension.zip
        with:
          expression: |
            (await octokit.request("GET " + env.ASSETS_URL)).data
              .find(asset => asset.name == env.ASSET_NAME)?.id || ''
      - uses: actions/setup-node@v4
        if: '!steps.getZipAssetId.outputs.result'
        with:
          node-version: latest
          cache: npm
      - run: npm ci
        if: '!steps.getZipAssetId.outputs.result'
      # bump version number
      - name: Version bump
        if: '!steps.getZipAssetId.outputs.result'
        run: npm version from-git --no-git-tag-version
        continue-on-error: true
      - name: Version sync
        if: '!steps.getZipAssetId.outputs.result'
        run: npx version-everything manifest.json
        continue-on-error: true
      # build extension
      - run: npm run build
        if: '!steps.getZipAssetId.outputs.result'
      # pack zip
      - run: mkdir hosted
        if: '!steps.getZipAssetId.outputs.result'
      - name: Pack
        if: '!steps.getZipAssetId.outputs.result'
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: dist
          zipFilePath: hosted/extension.zip
      - name: Upload ZIP
        if: '!steps.getZipAssetId.outputs.result'
        id: uploadZipAsset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: hosted/extension.zip
          asset_name: extension.zip
          asset_content_type: application/zip
  # then build a .crx from it
  build-signed-crx-asset:
    needs: ensure-zip
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download ZIP from release
        uses: cardinalby/download-release-asset-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          assetId: ${{ needs.ensure-zip.outputs.zipAssetId }}
          targetPath: hosted/extension.zip
      - name: Build .crx
        uses: cardinalby/webext-buildtools-chrome-crx-action@v2
        with:
          zipFilePath: hosted/extension.zip
          crxFilePath: hosted/extension.crx
          privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}
          updateXmlPath: hosted/update.xml
          updateXmlCodebaseUrl: https://${{ vars.HOST_DOMAIN }}/extension.crx
      - name: Upload .crx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: hosted/extension.crx
          asset_name: extension.crx
          asset_content_type: application/x-chrome-extension
      - name: Upload .xml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: hosted/update.xml
          asset_name: update.xml
          asset_content_type: application/xml
  # and build a .xpi from it
  build-signed-xpi-asset:
    needs: ensure-zip
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Download ZIP from release
        uses: cardinalby/download-release-asset-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          assetId: ${{ needs.ensure-zip.outputs.zipAssetId }}
          targetPath: hosted/extension.zip
      - name: Sign .xpi for offline distribution
        id: ffSignXpi
        continue-on-error: true
        uses: cardinalby/webext-buildtools-firefox-sign-xpi-action@1.0.6
        with:
          timeoutMs: 1200000
          extensionId: ${{ vars.FF_EXT_ID }}
          zipFilePath: hosted/extension.zip
          xpiFilePath: hosted/extension.xpi
          jwtIssuer: ${{ secrets.FF_JWT_ISSUER }}
          jwtSecret: ${{ secrets.FF_JWT_SECRET }}
      - name: Abort on signing error
        if: |
          steps.ffSignXpi.outcome == 'failure' &&
          steps.ffSignXpi.outputs.sameVersionAlreadyUploadedError != 'true'
        run: exit 1
      - name: Upload .xpi
        if: steps.ffSignXpi.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: hosted/extension.xpi
          asset_name: extension.xpi
          asset_content_type: application/x-xpinstall
